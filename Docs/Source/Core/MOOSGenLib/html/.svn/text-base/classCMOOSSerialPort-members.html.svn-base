<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="center">
  <p><img src="moose7.gif" width="105" height="84"> </p>
  <p><font size="+1" face="Arial, Helvetica, sans-serif">MOOS</font></p>
</div>
</body>
</html>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li id="current"><a href="annotated.html"><span>Classes</span></a></li>
    <li><a href="files.html"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<h1>CMOOSSerialPort Member List</h1>This is the complete list of members for <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>, including all inherited members.<p><table>
  <tr bgcolor="#f0f0f0"><td><b>Break</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Close</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>CMOOSSerialPort</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>CommsLoop</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Configure</b>(STRING_LIST sParams) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Create</b>(const char *pPortNum=DEFAULT_PORT, int nBaudRate=DEFAULT_BAUDRATE)=0 (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [pure virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Flush</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetBaudRate</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetEarliest</b>(std::string &amp;sWhat, double &amp;dfWhen) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetLatest</b>(std::string &amp;sWhat, double &amp;dfWhen) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetPortName</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetTelegram</b>(std::string &amp;sTelegram, double dfTimeOut, double *pTime=NULL) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GetTermCharacter</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>GrabN</b>(char *pBuffer, int nRequired)=0 (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected, pure virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>IsCompleteReply</b>(char *pData, int nLen, int nRead) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>IsStreaming</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>IsVerbose</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#515b4160252d0c174dde3bea302ada9e">m_bHandShaking</a></td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_bQuit</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_bStreaming</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#bbdd5a0af12fd238866a6848edcf9515">m_bUseCsmExt</a></td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_bVerbose</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_cTermCharacter</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_InBox</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_InBoxLock</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#7d955d9cf179bc31d930413362a00818">m_nBaudRate</a></td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#318ac003670065915be6a1d7de61b3ef">m_nCommsThreadID</a></td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_OutBox</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_OutBoxLock</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_pfnUserIsCompleteReplyCallBack</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>m_PortLock</b> (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#143c258c17b1857a1d430bbfb138b338">m_sPort</a></td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>ReadNWithTimeOut</b>(char *pBuff, int nBufferLen, double Timeout=0.5, double *pTime=NULL) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SetIsCompleteReplyCallBack</b>(bool(*pfn)(char *pData, int nLen, int nRead)) (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#95739b2dd2881af7f2054aa5201dea6c">SetTermCharacter</a>(char cTermChar)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>StartThreads</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>TELEGRAM_LIST</b> typedef (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classCMOOSSerialPort.html#ee5728c91c7f6834b3bd619fba64bce2">THREAD_ID</a> typedef</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Write</b>(char *Str, int nLen, double *pTime=NULL)=0 (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [pure virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>~CMOOSSerialPort</b>() (defined in <a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a>)</td><td><a class="el" href="classCMOOSSerialPort.html">CMOOSSerialPort</a></td><td><code> [virtual]</code></td></tr>
</table><hr size="1"><address style="align: right;"><small>Generated on Fri Sep 28 20:14:21 2007 for MOOSGenLib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.6 </small></address>
</body>
</html>
