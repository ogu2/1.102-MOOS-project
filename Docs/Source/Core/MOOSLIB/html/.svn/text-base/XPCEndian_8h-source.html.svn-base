<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="center">
  <p><img src="moose7.gif" width="105" height="84"> </p>
  <p><font size="+1" face="Arial, Helvetica, sans-serif">MOOS</font></p>
</div>
</body>
</html>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
  </ul></div>
<h1>/home/pnewman/code/MOOS/trunk/Core/MOOSLIB/XPCEndian.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">//   MOOS - Mission Oriented Operating Suite </span>
<a name="l00004"></a>00004 <span class="comment">//  </span>
<a name="l00005"></a>00005 <span class="comment">//   A suit of Applications and Libraries for Mobile Robotics Research </span>
<a name="l00006"></a>00006 <span class="comment">//   Copyright (C) 2001-2005 Massachusetts Institute of Technology and </span>
<a name="l00007"></a>00007 <span class="comment">//   Oxford University. </span>
<a name="l00008"></a>00008 <span class="comment">//    </span>
<a name="l00009"></a>00009 <span class="comment">//   This software was written by Paul Newman at MIT 2001-2002 and Oxford </span>
<a name="l00010"></a>00010 <span class="comment">//   University 2003-2005. email: pnewman@robots.ox.ac.uk. </span>
<a name="l00011"></a>00011 <span class="comment">//      </span>
<a name="l00012"></a>00012 <span class="comment">//   This file is part of a  MOOS CORE Component. </span>
<a name="l00013"></a>00013 <span class="comment">//        </span>
<a name="l00014"></a>00014 <span class="comment">//   This program is free software; you can redistribute it and/or </span>
<a name="l00015"></a>00015 <span class="comment">//   modify it under the terms of the GNU General Public License as </span>
<a name="l00016"></a>00016 <span class="comment">//   published by the Free Software Foundation; either version 2 of the </span>
<a name="l00017"></a>00017 <span class="comment">//   License, or (at your option) any later version. </span>
<a name="l00018"></a>00018 <span class="comment">//          </span>
<a name="l00019"></a>00019 <span class="comment">//   This program is distributed in the hope that it will be useful, </span>
<a name="l00020"></a>00020 <span class="comment">//   but WITHOUT ANY WARRANTY; without even the implied warranty of </span>
<a name="l00021"></a>00021 <span class="comment">//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU </span>
<a name="l00022"></a>00022 <span class="comment">//   General Public License for more details. </span>
<a name="l00023"></a>00023 <span class="comment">//            </span>
<a name="l00024"></a>00024 <span class="comment">//   You should have received a copy of the GNU General Public License </span>
<a name="l00025"></a>00025 <span class="comment">//   along with this program; if not, write to the Free Software </span>
<a name="l00026"></a>00026 <span class="comment">//   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA </span>
<a name="l00027"></a>00027 <span class="comment">//   02111-1307, USA. </span>
<a name="l00028"></a>00028 <span class="comment">//</span>
<a name="l00029"></a>00029 <span class="comment">//   The XPC classes in MOOS are modified versions of the source provided </span>
<a name="l00030"></a>00030 <span class="comment">//   in "Making UNIX and Windows NT Talk" by Mark Nadelson and Thomas Haga </span>
<a name="l00031"></a>00031 <span class="comment">//</span>
<a name="l00033"></a>00033 <span class="comment"></span><span class="preprocessor">#ifndef _XPCEndian</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor">#define _XPCEndian</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span>
<a name="l00036"></a>00036 <span class="keyword">template</span>&lt;<span class="keyword">class</span> OrigType&gt; <span class="keyword">class </span>XPCEndian
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 <span class="keyword">private</span>:
<a name="l00039"></a>00039     <span class="keyword">union </span>EndianType
<a name="l00040"></a>00040     {
<a name="l00041"></a>00041         OrigType EndianValue;            <span class="comment">// Endian value of original type</span>
<a name="l00042"></a>00042         <span class="keywordtype">char</span> cCharList[<span class="keyword">sizeof</span>(OrigType)];    <span class="comment">// Byte representation of original type</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         <span class="comment">// Swap the bytes to derive the endian value</span>
<a name="l00045"></a>00045         <span class="keywordtype">void</span> vEndianSwap()
<a name="l00046"></a>00046         {
<a name="l00047"></a>00047             <span class="keywordtype">char</span> cTemp;
<a name="l00048"></a>00048             <span class="keywordtype">int</span> iSwap2 = 0;
<a name="l00049"></a>00049             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> iSwap1 = <span class="keyword">sizeof</span>(OrigType)-1; iSwap1 &gt;= <span class="keyword">sizeof</span>(OrigType)/2; iSwap1--)
<a name="l00050"></a>00050             {
<a name="l00051"></a>00051                 cTemp = cCharList[iSwap1];
<a name="l00052"></a>00052                 cCharList[iSwap1] = cCharList[iSwap2];
<a name="l00053"></a>00053                 cCharList[iSwap2] = cTemp;
<a name="l00054"></a>00054                 iSwap2++;
<a name="l00055"></a>00055             }
<a name="l00056"></a>00056         }
<a name="l00057"></a>00057     };
<a name="l00058"></a>00058 
<a name="l00059"></a>00059     OrigType OriginalVal;    <span class="comment">// Stores the data type in its original format</span>
<a name="l00060"></a>00060     EndianType EndianVal;     <span class="comment">// Stores the data type in its endian format</span>
<a name="l00061"></a>00061 <span class="keyword">public</span>:
<a name="l00062"></a>00062     <span class="comment">// Overladed = operator used to store the value in its original and endian format</span>
<a name="l00063"></a>00063     XPCEndian &amp;operator=(OrigType &amp;_Val)
<a name="l00064"></a>00064     {
<a name="l00065"></a>00065         OriginalVal = _Val;
<a name="l00066"></a>00066         EndianVal.EndianValue = _Val;
<a name="l00067"></a>00067         EndianVal.vEndianSwap();
<a name="l00068"></a>00068         <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00069"></a>00069     }    
<a name="l00070"></a>00070 
<a name="l00071"></a>00071     <span class="comment">// Sets the Value of the endian object and stores the value in its original and endia</span>
<a name="l00072"></a>00072     <span class="comment">// format</span>
<a name="l00073"></a>00073     <span class="keywordtype">void</span> vSetValue(OrigType _Val)
<a name="l00074"></a>00074     {
<a name="l00075"></a>00075         OriginalVal = _Val;
<a name="l00076"></a>00076                 EndianVal.EndianValue = _Val;
<a name="l00077"></a>00077                 EndianVal.vEndianSwap();
<a name="l00078"></a>00078     }
<a name="l00079"></a>00079 
<a name="l00080"></a>00080     <span class="comment">// Return the endian value</span>
<a name="l00081"></a>00081     OrigType getEndianValue() 
<a name="l00082"></a>00082     { 
<a name="l00083"></a>00083         <span class="keywordflow">return</span> EndianVal.EndianValue;
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="comment">// Return the original value</span>
<a name="l00087"></a>00087     OrigType getOriginalValue()
<a name="l00088"></a>00088     {
<a name="l00089"></a>00089         <span class="keywordflow">return</span> OriginalVal;
<a name="l00090"></a>00090     }
<a name="l00091"></a>00091 };
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Fri Sep 28 20:14:20 2007 for MOOSLIB by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.6 </small></address>
</body>
</html>
