PROJECT(MOOSGenLib)

SET(MOOSGENLIB_SRCS
   MOOSLock.cpp
   MOOSFileReader.cpp
   MOOSGenLibGlobalHelper.cpp
   ProcessConfigReader.cpp
   MOOSLinuxSerialPort.cpp
   MOOSSerialPort.cpp
   MOOSLock.h
   MOOSFileReader.h
   MOOSGenLibGlobalHelper.h
   ProcessConfigReader.h
   MOOSLinuxSerialPort.h
   MOOSSerialPort.h
   MOOSThread.h
   )

IF(WIN32)
    SET(MOOSGENLIB_SRCS ${MOOSGENLIB_SRCS} NTSerial.cpp MOOSNTSerialPort.cpp NTSerial.h MOOSNTSerialPort.h )
ENDIF(WIN32)


SET(ALLOW_RELEASE_ASSERTS FALSE CACHE BOOL "If TRUE then MOOSAssert is active in Release builds")

SET(MOOS_ASSERT_LEVEL "SOFT" CACHE STRING "OFF, SOFT (default) or HARD.  OFF: No asserts tested, SOFT: Prints error message but attempts to continue, HARD: Prints error message and exits.")
IF (MOOS_ASSERT_LEVEL MATCHES "OFF")
	ADD_DEFINITIONS(-DMOOS_ASSERT_LEVEL=0)
ELSEIF (MOOS_ASSERT_LEVEL MATCHES "SOFT")
	ADD_DEFINITIONS(-DMOOS_ASSERT_LEVEL=1)
ELSEIF (MOOS_ASSERT_LEVEL MATCHES "HARD")
	ADD_DEFINITIONS(-DMOOS_ASSERT_LEVEL=2)
ELSE (MOOS_ASSERT_LEVEL MATCHES "OFF")
	# Default
	ADD_DEFINITIONS(-DMOOS_ASSERT_LEVEL=1)
ENDIF (MOOS_ASSERT_LEVEL MATCHES "OFF")



ADD_LIBRARY(MOOSGen ${MOOSGENLIB_SRCS})

SET( INSTALL_HEADERS
MOOSLock.h
MOOSFileReader.h
MOOSGenLib.h
MOOSGenLibGlobalHelper.h
ProcessConfigReader.h
MOOSLinuxSerialPort.h
MOOSSerialPort.h
MOOSAssert.h
MOOSThread.h )

# install headers
INSTALL( FILES ${INSTALL_HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/MOOSGenLib )

# install libraries
INSTALL(TARGETS
MOOSGen
RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
)

